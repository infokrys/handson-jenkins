pipeline {
    stages {
        stage('Test') {
            agent {
                docker {
                    image 'python:3.9-alpine'
                    label 'node01'
                }
            }
            environment {
                HOME = "${WORKSPACE}/python-app"
            }
            steps {
                sh 'cd $HOME && pip install -r requirements.txt'
                sh '$HOME/.local/bin/pytest . --junit-xml=pytest_junit.xml'
            }
            post {
                always {
                    junit '**/*pytest_junit.xml'
                }
            }
        }
        stage('Build') {
            agent {
                node {
                    label 'node01'
                }
            }
            steps {
                dir('python-app') {
                    sh 'ls -l'
                    sh 'docker build -t python-app:$BUILD_NUMBER .'
                    sh 'docker save python-app:$BUILD_NUMBER > python-app.image'
                }

            }
        }

    }
}