pipeline {
    agent none
    environment {
        REGISTRY_NAME = "nocnazmiana/jenkins"
		DOCKERHUB_CREDENTIALS=credentials("dockerhub-kspilaszek")
	}
    stages {
        stage('Test') {
            agent {
                docker {
                    image 'python:3.9-alpine'
                    label 'node01'
                }
            }
            environment {
                HOME = "${WORKSPACE}/python-app"
            }
            steps {
                sh 'cd $HOME && pip install -r requirements.txt'
                sh '$HOME/.local/bin/pytest . --junit-xml=pytest_junit.xml'
            }
            post {
                always {
                    junit '**/*pytest_junit.xml'
                }
            }
        }
        stage('Build') {
            agent {
                node {
                    label 'node01'
                }
            }
            steps {
                dir('python-app') {
                    sh 'ls -l'
                    sh 'docker build -t $REGISTRY_NAME:$BUILD_NUMBER .'
                }

            }
        }
        stage('Push') {
            agent {
                node {
                    label 'node01'
                }
            }
            steps {
                dir('python-app') {
                    sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                    sh 'docker push $REGISTRY_NAME:$BUILD_NUMBER'
                }

            }
        }
        stage('Deployment to DEV') {
            agent {
                node {
                    label 'node01'
                }
            }
            steps {
                dir('python-app') {
                    sh 'docker run -d -p 5005:5000  $REGISTRY_NAME:$BUILD_NUMBER'
                }

            }
        }
        stage('Deployment to PROD') {
            agent {
                node {
                    label 'node01'
                }
            }
            steps {
                dir('python-app') {
                    sh 'docker run -d -p 5006:5000  $REGISTRY_NAME:$BUILD_NUMBER'
                }

            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}